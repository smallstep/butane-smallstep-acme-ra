variant: fcos
version: 1.4.0
passwd:
  users:
{%- for item in passwd.users %}
  - name: {{ item.name }}
{%- if item.system %}
    system: true
{%- endif  %}
{%- if item.groups %}
    groups:
{%- for item in item.groups %}
      - {{ item }}
{%- endfor %}
{%- endif %}
{%- if item.ssh_authorized_keys %}
    ssh_authorized_keys:
{%- for item in item.ssh_authorized_keys %}
      - {{ item }}
{%- endfor %}
{%- endif %}
{%- endfor %}
{%- if passwd.groups %}
  groups:
{%- for item in passwd.groups %}
  - name: {{ item.name }}
{%- endfor %}
{%- endif %}

storage:
  directories:
  - path: /etc/step
    mode: 0700
  - path: /etc/step-ca
    mode: 0700
    user:
      name: step
    group:
      name: step
  - path: /etc/step-ca/config
    mode: 0700
    user:
      name: step
    group:
      name: step
  - path: /etc/step-ca/db
    mode: 0700
    user:
      name: step
    group:
      name: step

  files:
  - path: /etc/hostname
    mode: 0644
    overwrite: true
    contents:
      inline: {{ system.hostname }}.{{ system.domainname }}

  - path: /etc/zincati/config.d/55-updates-strategy.toml
    contents:
      inline: |
        [identity]
        rollout_wariness = {{ system.updates.rollout_wariness }}

        [updates]
        strategy = "periodic"
        time_zone = "{{ system.updates.time_zone }}"

        [[updates.periodic.window]]
        days = {{ system.updates.days }}
        start_time = "{{ system.updates.start_time }}"
        length_minutes = {{ system.updates.length_minutes }}
{% if not system.updates.auto %}
  - path: /etc/zincati/config.d/90-disable-auto-updates.toml
    mode: 0644
    contents:
      inline: |
        [updates]
        enabled = false
{% endif %}
  - path: /usr/local/bin/step
    contents:
      source: https://mirror.quickvm.com/smallstep/step-cli/{{ stepcli.version }}/step.gz
      compression: gzip
      verification:
        hash: "sha512-{{ stepcli.sha512sum }}"
    mode: 0555

  - path: /usr/local/bin/step-ca
    contents:
      source: https://mirror.quickvm.com/smallstep/step-ca/{{ stepca.version }}/step-ca.gz
      compression: gzip
      verification:
        hash: "sha512-{{ stepca.sha512sum }}"
    mode: 0555

  - path: /etc/systemd/system/step-ca.service
    contents:
      source: https://raw.githubusercontent.com/smallstep/certificates/master/systemd/step-ca.service
      verification:
        hash: "sha512-1500060a1007e56ce7871909c8964c51c9f1be58cff2f752caa85aa6a92198f45f93abd46e54758bd610ea51e552bfbce8a9200215874f050834bad92a647593"
    mode: 0644

  - path: /etc/step-ca/password.txt
    mode: 0640
    user:
      name: step
    group:
      name: step
    overwrite: true
    contents:
      inline: {{ stepca.smallstep_provisioner_password }}

{%- if not stepca.smallstep_ca_token %}
  - path: /etc/step-ca/config/ca.json
    mode: 0640
    user:
      name: step
    group:
      name: step
    overwrite: true
    contents:
      inline: |
        {
          "address": "{{ stepca.smallstep_ra_address }}",
          "dnsNames": ["{{ stepca.smallstep_ra_dns_names }}"],
          "db": {
            "type": "badgerV2",
            "dataSource": "/etc/step-ca/db"
          },
          "logger": {"format": "json"},
          "authority": {
            "type": "stepcas",
            "certificateAuthority": "{{ stepca.smallstep_ca_url }}",
            "certificateAuthorityFingerprint": "{{ stepca.smallstep_ca_fingerprint }}",
            "certificateIssuer": {
              "type" : "jwk",
              "provisioner": "{{ stepca.smallstep_provisioner }}"
            },
            "provisioners": [{
              "type": "ACME",
              "name": "acme"
            }]
          },
          "tls": {
            "cipherSuites": [
              "TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305",
               "TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256"
            ],
            "minVersion": 1.2,
            "maxVersion": 1.3,
            "renegotiation": false
          }
        }
{% endif %}

systemd:
  units:
{%- if stepca.smallstep_ca_token is defined and stepca.smallstep_ca_token %}
  - name: step-ca-bootstrap@acme-ra.service
    enabled: true
    contents: |
      [Unit]
      Description=Bootstrap smallstep CA
      After=network-online.target step-ca.service
      Wants=network-online.target step-ca.service

      [Service]
      Type=oneshot
      RemainAfterExit=true
      Environment=STEPPATH=/etc/step
      ExecStart=/usr/bin/bash -c "step ca bootstrap --force --install \
      --ca-url $(echo https://127.0.0.1:$(lsof -p $(pidof step-ca) -P|grep LISTEN|cut -d: -f2|cut -f1 -d\(|xargs)) \
      --fingerprint $(step certificate fingerprint <(curl -s https://127.0.0.1:$(lsof -p $(pidof step-ca) -P|grep LISTEN|cut -d: -f2|cut -f1 -d\(|xargs)/roots.pem --insecure)) \
      --context %i"

      Restart=on-failure
      RestartSec=60s

      [Install]
      WantedBy=multi-user.target
{% else %}
  - name: step-ca-bootstrap@acme-ra.service
    enabled: true
    dropins:
    - name: override.conf
      contents: |
          [Service]
          Environment=STEP_CA_FINGERPRINT={{ stepca.smallstep_ca_fingerprint }}
          Environment=STEP_CA_URL={{ stepca.smallstep_ca_url }}
    contents: |
      [Unit]
      Description=Bootstrap smallstep CA
      After=network-online.target
      Wants=network-online.target

      [Service]
      Type=oneshot
      RemainAfterExit=true
      Environment=STEPPATH=/etc/step
      ExecStart=step ca bootstrap --force --install \
      --ca-url ${STEP_CA_URL} --fingerprint ${STEP_CA_FINGERPRINT} --context %i

      Restart=on-failure
      RestartSec=60s

      [Install]
      WantedBy=multi-user.target
{% endif %}
  - name: step-ca.service
    enabled: true
    dropins:
    - name: override.conf
      contents: |
{%- if stepca.smallstep_ca_token is defined and stepca.smallstep_ca_token %}
          [Unit]
          ConditionFileNotEmpty=
{% endif %}
          [Service]
          ExecStart=
{%- if stepca.smallstep_ca_token is defined and stepca.smallstep_ca_token %}
          Environment=STEP_CA_TOKEN={{ stepca.smallstep_ca_token }}
          ExecStart=/usr/local/bin/step-ca --issuer-password-file password.txt
{% else %}
          ExecStart=/usr/local/bin/step-ca config/ca.json --issuer-password-file password.txt
{% endif %}
